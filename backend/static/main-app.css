@import './common.css';

/* || UI Classes */

.selection {
    border: var(--thick-border) solid var(--ui-accent-color);
    &.tentative {
        border-style: dashed;
    }
}

.ui-window {
    border: var(--thick-border) solid var(--ui-border-color);
    background-color: var(--ui-background-color);
    border-radius: 6px;
}

.ui-group {
    padding: 0.5rem;
    border: var(--thin-border) solid var(--ui-border-color);
    border-radius: 3px;
}

.spaced-bar {
    display: flex;
    flex-flow: row wrap;
    row-gap: 0.5em;
    column-gap: 0.2em;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

/* || UI Elements */
header {
    padding: 0.5em;
    background: var(--ui-background-color);
    border-color: var(--ui-border-color);
    border-width: 1px;
    border-bottom-style: solid;
}

button {
    padding: 0.25rem 0.5rem;
}

fieldset {
    border: var(--thin-border) solid var(--ui-border-color);
    /* border-radius: var(--thin-border); */
    /* Small padding so most of internal area is in children. */
    padding: 0 0.2rem;
    /* Add large padding to child elements to make them easier to hit. */
    > *:not(legend) {
        padding: 0.5rem;
    }
}

/* || Whiteboard interaction */
body {
    /* display: flex forces main to not overflow from body */
    display: flex;
    flex-direction: column;
}
html, body {
    /* exactly fill viewport so we can only scroll the whiteboard area */
    height: 100%;
}
main {
    /* let the whiteboard scroll */
    overflow: scroll;
}
#whiteboard {
    border: var(--thick-border) dashed var(--ui-border-color);
    /* width and height of #whiteboard must match the canvas width and height components of the canvas layers, which must also all be equal */
    width: 3000px;
    height: 3000px;
    position: relative;
    > * {
        /* Overlay the canvases; a programming convenience. */
        position: absolute;
    }
}
#whiteboard-ui {
    .clickable {
        /* Move clickable UI elements above the touch input layer. */
        z-index: 2;
    }
    > * {
        /* Enable manual positioning with `top` and `left` CSS properties. */
        position: absolute;
    }
}
